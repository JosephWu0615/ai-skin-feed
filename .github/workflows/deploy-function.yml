name: Deploy Function App

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'azure_function/**'
      - 'aggregator.py'
      - '.github/workflows/deploy-function.yml'

env:
  AZURE_FUNCTIONAPP_NAME: unified-feed

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Include shared aggregator in function package
        run: |
          cp -f aggregator.py azure_function/aggregator.py
          # Include fallback data so first run has content
          cp -f social_feed_combined.json azure_function/social_feed_combined.json

      - name: Extract ZipDeploy credentials from publish profile
        shell: bash
        env:
          PUBLISH_PROFILE: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
        run: |
          python - <<'PY'
          import os, sys
          from xml.etree import ElementTree as ET
          xml = os.environ['PUBLISH_PROFILE']
          root = ET.fromstring(xml)
          prof = None
          for p in root.findall('publishProfile'):
              if p.get('publishMethod') == 'ZipDeploy':
                  prof = p; break
          if prof is None:
              print('::error::ZipDeploy profile not found in publish profile')
              sys.exit(1)
          user = prof.get('userName')
          pwd = prof.get('userPWD')
          url = prof.get('publishUrl')
          host = url.split(':')[0]
          # mask secrets
          print(f"::add-mask::{user}")
          print(f"::add-mask::{pwd}")
          with open(os.environ['GITHUB_ENV'], 'a') as f:
              f.write(f"ZIP_USER={user}\n")
              f.write(f"ZIP_PASS={pwd}\n")
              f.write(f"SCM_HOST={host}\n")
          PY

      - name: Create function zip package
        run: |
          cd azure_function
          zip -r ../function_package.zip .

      - name: Deploy via Kudu ZipDeploy (publish profile)
        env:
          ZIP_USER: ${{ env.ZIP_USER }}
          ZIP_PASS: ${{ env.ZIP_PASS }}
          SCM_HOST: ${{ env.SCM_HOST }}
        run: |
          echo "Deploying to https://${SCM_HOST}/api/zipdeploy"
          curl -sS -u "${ZIP_USER}:${ZIP_PASS}" -X POST \
            --header "Content-Type: application/zip" \
            --data-binary @function_package.zip \
            "https://${SCM_HOST}/api/zipdeploy"
